{% set dockersync = false %}
{% if @('host.os') == 'darwin' and @('docker-sync') == 'yes' %}
{% set dockersync = true %}
{% endif %}
version: '3'
services:
  chrome:
    build: docker/image/chrome
    environment:
      HOST_OS_FAMILY: ${HOST_OS_FAMILY}
      APP_HOST: ${APP_HOST}
    labels:
      - traefik.enable=false
    networks:
      private:
        aliases:
          - chrome
      shared:
        aliases:
          - {{ @('namespace') }}_chrome
  console:
{% if @('app.build') == 'dynamic' %}
    entrypoint: /entrypoint.dynamic.sh
    volumes:
      - {{ (dockersync) ? @('workspace.name') ~ '-sync:/app:nocopy' : '../:/app:delegated' }}
      - ./skeleton:/home/build/skeleton
{% endif %}
    labels:
      - traefik.enable=false
    build:
      context: ../
      dockerfile: .my127ws/docker/image/console/Dockerfile
    image: {{ @('workspace.name') ~ '-console:dev' }}
{% if @('app.build') == 'static' %}
      args:
        APP_MODE: {{ @('app.mode') }}
{% endif %}
    environment: &APP_ENV_VARS
      SPRYKER_SALT: ${SPRYKER_SALT}
      HOST_OS_FAMILY: ${HOST_OS_FAMILY}
      APP_NAME: ${APP_NAME}
      YVES_HOST: ${YVES_HOST}
      ZED_HOST: ${ZED_HOST}
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      ELASTICSEARCH_HOST: ${ELASTICSEARCH_HOST}
      ELASTICSEARCH_PORT: ${ELASTICSEARCH_PORT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PROTOCOL: ${REDIS_PROTOCOL}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_API_PORT: ${RABBITMQ_API_PORT}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_VHOST: ${RABBITMQ_VHOST}
      JENKINS_HOST: ${JENKINS_HOST}
      JENKINS_PORT: ${JENKINS_PORT}
      B2B_DEMOSHOP_URL: ${B2B_DEMOSHOP_URL}
    networks:
      - private
    depends_on:
      - postgres
      - redis
      - elasticsearch
      - rabbitmq
      - jenkins
      - jenkins-slave
  nginx:
    build: docker/image/nginx
{% if @('app.build') == 'dynamic' %}
    volumes:
      - {{ (dockersync) ? @('workspace.name') ~ '-sync:/app:nocopy' : '../:/app:delegated' }}
{% endif %}
    labels:
      - traefik.backend=${APP_NAME}
      - traefik.frontend.rule=Host:${YVES_HOST},${ZED_HOST}
      - traefik.docker.network=my127ws
      - traefik.port=80
      - co.elastic.logs/module=nginx
      - co.elastic.metrics/module=nginx
    depends_on:
      - php-fpm
    networks:
      private:
        aliases:
          - nginx
      shared:
        aliases:
          - {{ @('namespace') }}_nginx
      monitoring:
        aliases:
          - {{ @('namespace') }}_nginx
  php-fpm:
    build: docker/image/php-fpm
{% if @('app.build') == 'dynamic' %}
    entrypoint: /entrypoint.dynamic.sh
    volumes:
      - {{ (dockersync) ? @('workspace.name') ~ '-sync:/app:nocopy' : '../:/app:delegated' }}
{% endif %}
    labels:
      - traefik.enable=false
    networks:
      private:
        aliases:
          - php-fpm
      monitoring:
        aliases:
          - {{ @('namespace') }}_php-fpm
    depends_on:
      - console
    environment:
      <<: *APP_ENV_VARS
  postgres:
    image: postgres:9.4
    labels:
      - traefik.enable=false
      - co.elastic.logs/module=postgresql
      - co.elastic.metrics/module=postgresql
      - co.elastic.metrics/metricsets=["status"]
      - co.elastic.metrics/hosts=["tcp({{ @('namespace') }}_postgres:5432)/"]
      - co.elastic.metrics/username=root
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    networks:
      private:
        aliases:
          - postgres
      monitoring:
        aliases:
          - {{ @('namespace') }}_postgres
  redis:
    image: redis:4-alpine
    labels:
      - traefik.enable=false
      - co.elastic.logs/module=redis
    networks:
      private:
        aliases:
          - redis
      monitoring:
        aliases:
          - {{ @('namespace') }}_redis
  elasticsearch:
    build: docker/image/elasticsearch
    environment:
      ES_JAVA_OPTS: "-Xmx512m -Xms512m"
    labels:
      - traefik.enable=false
      - co.elastic.logs/module=elasticsearch
      - co.elastic.metrics/module=elasticsearch
    networks:
      private:
        aliases:
          - elasticsearch
      monitoring:
        aliases:
          - {{ @('namespace') }}_elasticsearch
  rabbitmq:
    image: rabbitmq:3.7-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
    labels:
      - traefik.enable=false
      - co.elastic.logs/module=rabbitmq
      - co.elastic.metrics/module=rabbitmq
      - co.elastic.metrics/metricsets=["node", "queue", "connection"]
      - co.elastic.metrics/hosts=["tcp({{ @('namespace') }}_rabbitmq:5672)/"]
    networks:
      private:
        aliases:
          - rabbitmq
      monitoring:
        aliases:
          - {{ @('namespace') }}_rabbitmq
  jenkins:
    image: "jenkins:alpine"
    environment:
      JAVA_OPTS: '-Djenkins.install.runSetupWizard=false'
    labels:
      - traefik.backend=${JENKINS_HOST}
      - traefik.frontend.rule=Host:${JENKINS_HOST_NAME}
      - traefik.docker.network=my127ws
      - traefik.port=${JENKINS_PORT}
      - co.elastic.logs/module=jenkins
      - co.elastic.metrics/module=jenkins
    networks:
      private:
        aliases:
          - jenkins
      monitoring:
        aliases:
          - {{ @('namespace') }}_jenkins
      shared:
        aliases:
          - {{ @('namespace') }}_jenkins
  jenkins-slave:
    image: {{ @('workspace.name') ~ '-console:dev' }}
{% if @('app.build') == 'dynamic' %}
    entrypoint: /entrypoint.jenkins_slave.dynamic.sh
    volumes:
      - {{ (dockersync) ? @('workspace.name') ~ '-sync:/app:nocopy' : '../:/app:delegated' }}
{% else %}
    entrypoint: /entrypoint.jenkins_slave.sh
{% endif %}
    depends_on:
      - jenkins
    environment:
      <<: *APP_ENV_VARS
      JENKINS_SLAVE_NAME: backend
      JENKINS_URL: http://${JENKINS_HOST}:${JENKINS_PORT}/
    labels:
      - traefik.enable=false
    networks:
      private:
        aliases:
          - jenkins-slave
networks:
  private:
    external: false
  monitoring:
    external:
      name: my127ws_monitoring
  shared:
    external:
      name: my127ws
{% if dockersync %}
volumes:
  {{ @('workspace.name') }}-sync:
    external: true
{% endif %}
