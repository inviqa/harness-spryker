apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.prefix }}nginx
  labels:
    app.service: {{ .Values.prefix }}nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.service: {{ .Values.prefix }}nginx
  template:
    metadata:
      labels:
        app.service: {{ .Values.prefix }}nginx
    spec:
      containers:
      - env:
        {{ range $key, $value := .Values.docker.services.nginx.environment }}
        - name: {{ $key }}
          value: "{{ $value }}"
        {{ end }}
        image: {{ .Values.docker.image.nginx }}
        imagePullPolicy: Always
        name: nginx
        ports:
        - containerPort: 80
        resources:
          limits:
            memory: {{ .Values.resources.limits.memory.nginx }}
          requests:
            memory: {{ .Values.resources.requests.memory.nginx }}
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        {{- if not (eq "" (include "application.volumeMounts.all" .)) }}
        {{- include "application.volumeMounts.all" . | indent 8 }}
        {{- else }} []
        {{- end }}
      imagePullSecrets:
      - name: {{ .Values.prefix }}docker-config
      restartPolicy: Always
      volumes:
      {{- if not (eq "" (include "application.volumes.all" .)) }}
      {{- include "application.volumes.all" . | indent 6 }}
      {{- else }} []
      {{- end }}
status: {}
